{"ast":null,"code":"var _jsxFileName = \"/Users/mitchellohair/fin_dash/src/index.js\";\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import './index.css';\n// import App from './App';\n// import * as serviceWorker from './serviceWorker';\n// ReactDOM.render(<App />, document.getElementById('root'));\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\nimport fs from 'fs';\nimport bodyParser from 'body-parser';\nimport express from 'express';\nimport plaid from 'plaid';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nconst content = fs.readFileSync('../not_keys.json');\nconst credentials = JSON.parse(content);\nReactDOM.render(React.createElement(App, {\n  key: credentials.public_key,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}), document.getElementById('root')); // const content = fs.readFileSync('../not_keys.json');\n// const credentials = JSON.parse(content);\n\nconst APP_PORT = 8000;\nconst PLAID_CLIENT_ID = credentials.client_id;\nconst PLAID_SECRET = credentials.sandbox_secret;\nconst PLAID_PUBLIC_KEY = credentials.public_key;\nconst PLAID_ENV = 'sandbox';\nconst PLAID_PRODUCTS = 'auth,transactions,balance,identity';\nconst PLAID_COUNTRY_CODES = 'US';\nvar PUBLIC_TOKEN = '';\nvar ACCESS_TOKEN = ''; // Initialize client\n\nconst plaidClient = new plaid.Client(PLAID_CLIENT_ID, PLAID_SECRET, PLAID_PUBLIC_KEY, plaid.environments[PLAID_ENV]);\nconst app = express();\napp.use(express.static(__dirname + '/../public'));\napp.listen(APP_PORT);\napp.use(bodyParser.urlencoded({\n  extended: false\n}));\napp.use(bodyParser.json()); // Accept the public_token sent from Link\n\napp.post('/get_access_token', function (request, response) {\n  PUBLIC_TOKEN = request.body.public_token;\n  plaidClient.exchangePublicToken(PUBLIC_TOKEN, function (error, tokenResponse) {\n    if (error != null) {\n      console.log('Could not exchange public_token!\\n' + error);\n      return response.json({\n        error: error\n      });\n    }\n\n    ACCESS_TOKEN = tokenResponse.access_token;\n    var ITEM_ID = tokenResponse.item_id;\n    console.log('Access Token: ' + ACCESS_TOKEN);\n    console.log('Item ID: ' + ITEM_ID);\n    response.json({\n      'error': null\n    });\n  });\n});","map":{"version":3,"sources":["/Users/mitchellohair/fin_dash/src/index.js"],"names":["fs","bodyParser","express","plaid","React","ReactDOM","App","content","readFileSync","credentials","JSON","parse","render","public_key","document","getElementById","APP_PORT","PLAID_CLIENT_ID","client_id","PLAID_SECRET","sandbox_secret","PLAID_PUBLIC_KEY","PLAID_ENV","PLAID_PRODUCTS","PLAID_COUNTRY_CODES","PUBLIC_TOKEN","ACCESS_TOKEN","plaidClient","Client","environments","app","use","static","__dirname","listen","urlencoded","extended","json","post","request","response","body","public_token","exchangePublicToken","error","tokenResponse","console","log","access_token","ITEM_ID","item_id"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA,OAAOA,EAAP,MAAe,IAAf;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AAEA,MAAMC,OAAO,GAAGP,EAAE,CAACQ,YAAH,CAAgB,kBAAhB,CAAhB;AACA,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWJ,OAAX,CAApB;AAEAF,QAAQ,CAACO,MAAT,CAAgB,oBAAC,GAAD;AAAK,EAAA,GAAG,EAAEH,WAAW,CAACI,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAqDC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAArD,E,CAEA;AACA;;AAEA,MAAMC,QAAQ,GAAG,IAAjB;AACA,MAAMC,eAAe,GAAGR,WAAW,CAACS,SAApC;AACA,MAAMC,YAAY,GAAGV,WAAW,CAACW,cAAjC;AACA,MAAMC,gBAAgB,GAAGZ,WAAW,CAACI,UAArC;AACA,MAAMS,SAAS,GAAG,SAAlB;AAEA,MAAMC,cAAc,GAAG,oCAAvB;AACA,MAAMC,mBAAmB,GAAG,IAA5B;AAEA,IAAIC,YAAY,GAAG,EAAnB;AACA,IAAIC,YAAY,GAAG,EAAnB,C,CAEA;;AACA,MAAMC,WAAW,GAAG,IAAIxB,KAAK,CAACyB,MAAV,CAAiBX,eAAjB,EAClBE,YADkB,EAElBE,gBAFkB,EAGlBlB,KAAK,CAAC0B,YAAN,CAAmBP,SAAnB,CAHkB,CAApB;AAKA,MAAMQ,GAAG,GAAG5B,OAAO,EAAnB;AACA4B,GAAG,CAACC,GAAJ,CAAQ7B,OAAO,CAAC8B,MAAR,CAAeC,SAAS,GAAG,YAA3B,CAAR;AACAH,GAAG,CAACI,MAAJ,CAAWlB,QAAX;AACAc,GAAG,CAACC,GAAJ,CAAQ9B,UAAU,CAACkC,UAAX,CAAsB;AAC5BC,EAAAA,QAAQ,EAAE;AADkB,CAAtB,CAAR;AAGAN,GAAG,CAACC,GAAJ,CAAQ9B,UAAU,CAACoC,IAAX,EAAR,E,CAEA;;AACAP,GAAG,CAACQ,IAAJ,CAAS,mBAAT,EAA8B,UAAUC,OAAV,EAAmBC,QAAnB,EAA6B;AACzDf,EAAAA,YAAY,GAAGc,OAAO,CAACE,IAAR,CAAaC,YAA5B;AACAf,EAAAA,WAAW,CAACgB,mBAAZ,CAAgClB,YAAhC,EAA8C,UAAUmB,KAAV,EAC5CC,aAD4C,EAC7B;AACf,QAAID,KAAK,IAAI,IAAb,EAAmB;AACjBE,MAAAA,OAAO,CAACC,GAAR,CAAY,uCAAuCH,KAAnD;AACA,aAAOJ,QAAQ,CAACH,IAAT,CAAc;AAAEO,QAAAA,KAAK,EAAEA;AAAT,OAAd,CAAP;AACD;;AACDlB,IAAAA,YAAY,GAAGmB,aAAa,CAACG,YAA7B;AACA,QAAIC,OAAO,GAAGJ,aAAa,CAACK,OAA5B;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAmBrB,YAA/B;AACAoB,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAcE,OAA1B;AACAT,IAAAA,QAAQ,CAACH,IAAT,CAAc;AAAE,eAAS;AAAX,KAAd;AACD,GAXD;AAYD,CAdD","sourcesContent":["// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import './index.css';\n// import App from './App';\n// import * as serviceWorker from './serviceWorker';\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n\nimport fs from 'fs';\nimport bodyParser from 'body-parser';\nimport express from 'express';\nimport plaid from 'plaid';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nconst content = fs.readFileSync('../not_keys.json');\nconst credentials = JSON.parse(content);\n\nReactDOM.render(<App key={credentials.public_key}/>, document.getElementById('root'));\n\n// const content = fs.readFileSync('../not_keys.json');\n// const credentials = JSON.parse(content);\n\nconst APP_PORT = 8000;\nconst PLAID_CLIENT_ID = credentials.client_id;\nconst PLAID_SECRET = credentials.sandbox_secret;\nconst PLAID_PUBLIC_KEY = credentials.public_key;\nconst PLAID_ENV = 'sandbox';\n\nconst PLAID_PRODUCTS = 'auth,transactions,balance,identity';\nconst PLAID_COUNTRY_CODES = 'US';\n\nvar PUBLIC_TOKEN = '';\nvar ACCESS_TOKEN = '';\n\n// Initialize client\nconst plaidClient = new plaid.Client(PLAID_CLIENT_ID,\n  PLAID_SECRET,\n  PLAID_PUBLIC_KEY,\n  plaid.environments[PLAID_ENV]);\n\nconst app = express();\napp.use(express.static(__dirname + '/../public'));\napp.listen(APP_PORT);\napp.use(bodyParser.urlencoded({\n  extended: false\n}));\napp.use(bodyParser.json());\n\n// Accept the public_token sent from Link\napp.post('/get_access_token', function (request, response) {\n  PUBLIC_TOKEN = request.body.public_token;\n  plaidClient.exchangePublicToken(PUBLIC_TOKEN, function (error,\n    tokenResponse) {\n    if (error != null) {\n      console.log('Could not exchange public_token!\\n' + error);\n      return response.json({ error: error });\n    }\n    ACCESS_TOKEN = tokenResponse.access_token;\n    var ITEM_ID = tokenResponse.item_id;\n    console.log('Access Token: ' + ACCESS_TOKEN);\n    console.log('Item ID: ' + ITEM_ID);\n    response.json({ 'error': null });\n  });\n});\n"]},"metadata":{},"sourceType":"module"}